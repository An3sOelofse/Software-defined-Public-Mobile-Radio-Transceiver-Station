options:
  parameters:
    author: Andries Oelofse
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: hb
    hier_block_src_path: '.:'
    id: dcss_generation
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: DCSS Tone Generator
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: audio_sample_rate
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Audio Rate
    short_id: ''
    type: intx
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [408, 16.0]
    rotation: 0
    state: true
- name: blocks_add_const_vxx_0
  id: blocks_add_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '-0.5'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [472, 320.0]
    rotation: 0
    state: enabled
- name: blocks_add_xx_0
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1192, 216.0]
    rotation: 0
    state: enabled
- name: blocks_char_to_float_1
  id: blocks_char_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [328, 320.0]
    rotation: 0
    state: enabled
- name: blocks_moving_average_xx_0_0
  id: blocks_moving_average_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    length: '150'
    max_iter: '150'
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: 1/150
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [816, 296.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_1
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '0.5'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [408, 208.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_vxx_1_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: 0.07*dcs_active
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1000, 320.0]
    rotation: 0
    state: enabled
- name: dcs_active
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: DCS Active/Inactive (1/0)
    short_id: ''
    type: intx
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [208, 8.0]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other base classes\
      \ are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python Block\
      \ example - a simple multiply const\"\"\"\n\n    def __init__(self, dcs_code=0):\
      \  # only default arguments here\n        \"\"\"arguments to this function show\
      \ up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n         \
      \   self,\n            name='DCS Generator',   # will show up in GRC\n     \
      \       in_sig=[],\n            out_sig=[np.byte]\n        )\n        # if an\
      \ attribute with the same name as a parameter is found,\n        # a callback\
      \ is registered (properties work, too).\n        self.stored_codes = [np.array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n\
      \                             np.array([0,1,1,0,0,0,1,1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,1])]\n\
      \        self.dcs_code = int(dcs_code)\n\n        # self.selected_code = [[0,1,1,0,0,0,1,1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,1]]\n\
      \        self.selected_code = [self.stored_codes[self.dcs_code]]\n        self.long_code\
      \ = np.repeat(self.selected_code,178,axis=1)\n        print(self.long_code[0])\n\
      \        self.lastIndex = 0\n\n    def work(self,input_items, output_items):\n\
      \        \"\"\"example: multiply with constant\"\"\"\n        out = output_items[0]\n\
      \        length = len(out)\n\n        if(self.lastIndex+length >= 4094-1):\n\
      \            self.lastIndex = self.lastIndex % 23 \n\n        out[:] = self.long_code[0][self.lastIndex:self.lastIndex+length]\n\
      \        self.lastIndex = self.lastIndex + length \n\n        \n\n       \n\
      \        return length\n"
    affinity: ''
    alias: ''
    comment: ''
    dcs_code: '1.0'
    maxoutbuf: '4094'
    minoutbuf: '0'
  states:
    _io_cache: ('DCS Generator', 'blk', [('dcs_code', '0')], [], [('0', 'byte', 1)],
      'Embedded Python Block example - a simple multiply const', ['dcs_code'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [168, 320.0]
    rotation: 0
    state: enabled
- name: low_pass_filter_0_0
  id: low_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    cutoff_freq: '200'
    decim: '1'
    gain: '1'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: audio_sample_rate
    type: fir_filter_fff
    width: '20'
    win: window.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [640, 268.0]
    rotation: 0
    state: enabled
- name: pad_sink_0
  id: pad_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: out
    num_streams: '1'
    optional: 'False'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1296, 224.0]
    rotation: 0
    state: true
- name: pad_source_0
  id: pad_source
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: in
    maxoutbuf: '0'
    minoutbuf: '0'
    num_streams: '1'
    optional: 'False'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [160, 208.0]
    rotation: 0
    state: true

connections:
- [blocks_add_const_vxx_0, '0', low_pass_filter_0_0, '0']
- [blocks_add_xx_0, '0', pad_sink_0, '0']
- [blocks_char_to_float_1, '0', blocks_add_const_vxx_0, '0']
- [blocks_moving_average_xx_0_0, '0', blocks_multiply_const_vxx_1_0, '0']
- [blocks_multiply_const_vxx_1, '0', blocks_add_xx_0, '0']
- [blocks_multiply_const_vxx_1_0, '0', blocks_add_xx_0, '1']
- [epy_block_0, '0', blocks_char_to_float_1, '0']
- [low_pass_filter_0_0, '0', blocks_moving_average_xx_0_0, '0']
- [pad_source_0, '0', blocks_multiply_const_vxx_1, '0']

metadata:
  file_format: 1
  grc_version: 3.10.4.0
